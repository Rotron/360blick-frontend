/*

# COMPONENTS

  A page module that has a certain purpose and is a wrapper for it’s children,
  in example a modal or a slider can be a component.

  Components use a name:

  .component {}
  .component-name {}

  A name can consist of different words separated by a “-” (dash).

# VARIANTS

  A component and its containing elements which are modified in a certain way.

  .component--variant {}
  .component-name--variant-modifier {}

  A variant is divided by “--”(double dash) from the main component’s name.
  It can contain “-”(dashes) to separate words from each other.

# NESTED ELEMENTS

  Parts of which a component can consist, sometimes similar across components.

  .component__link {}
  .component-name__link-element {}

# MODIFIERS / STATES

  The state of a component or nested element is modified by user interaction,
  for example a disabled button.

  A component can be modified via a separate class:

  .component.is-active {}
  .component-name.has-children {}
  .component.js-selected {}

  A modifier class is a verb combined with the purpose it has to describe the state of the component,
  which are separated with a “-” (dash).

*/

@import "base/mixins";
@import "base/reset";
@import "base/icons";
@import "base/icons-extension";
@import "base/grid";
@import "base/colors";
@import "base/global-states";

@import "components/buttons";
@import "components/_nav-header";
@import "components/_sidebar-menu";
@import "components/_profile-info-box";
@import "components/_interaction-bar";
@import "components/_dropdown";
@import "components/_dropzone";
@import "components/_overview-list";
@import "components/_export-list";
@import "components/_tiny-list";
@import "components/_icon-list";
@import "components/_settings";
@import "components/_dialog";
@import "components/_sections";
@import "components/_form";
@import "components/_auth-messages";
@import "components/_nav-tabs";
@import "components/_user-banner";
@import "components/_footer";
@import "components/_views";

@import "components/editor/editor";

// Links
//
// usual links and style for external links
//
// Markup: <a href="" class="test {$modifiers}">Link</a>
//
// :visited  - visited styles
// :hover    - Highlight the button when hovered.
// :focus    - focus styles
// :active   - "Press" the button down when clicked.
// .external - external link styles
//
// Styleguide 1

$link-color: #0000FF;
$link-colorV: #0000FF;
$link-colorH: #0000FF;
$link-colorF: #0000FF;
$link-colorA: #0000FF;
$link-external: #0000FF;



.test {
  color: $link-color;
  text-decoration: none;

  &:visited {
    color: $link-colorV;
  }
  &:hover {
    color: $link-colorH;
  }
  &:focus {
    color: $link-colorF;
    outline: thin solid;
  }
  &:active {
    color: $link-colorA;
    outline: none;
  }
  &:hover, &:active {
    outline: none;
  }
  &.external {
    color: $link-external;
    border: 1px solid red;
  }
}

.reveal-animation {
  @include blick-transition(all, 0.3s);
}

.reveal-animation.ng-enter, .reveal-animation.ng-leave.ng-leave-active {
  opacity: 0;
}

.reveal-animation.ng-enter.ng-enter-active, .reveal-animation.ng-leave {
  opacity: 1;
}

.ui-view-container {
  position: relative;
}

[ui-view].ng-enter, [ui-view].ng-leave {
  @include blick-transition(all, 0.3s);
  position: absolute;
  left: 0;
  right: 0;
}

[ui-view].ng-enter {
  opacity: 0;
}

[ui-view].ng-enter-active {
  opacity: 1;
}

[ui-view].ng-leave {
  opacity: 1;
}

[ui-view].ng-leave-active {
  opacity: 0;
}